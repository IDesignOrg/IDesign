#/.github/workflows/deploy.yaml

name: CI/CD Pipeline

on:
  push:
    branches:
      - zzz

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Write environment files
        run: |
          echo "${{ secrets.APPLICATIONPRIVATE }}" > src/main/resources/application-private.properties
        shell: bash

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "persuasive-feat-426613-s5-a789fe6d3bc5.json"
          json: ${{ secrets.PERSUASIVE }}
          dir: "src/main/resources/"

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t yoonjaehwan/idesign:latest .
          docker push yoonjaehwan/idesign:latest

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -x  # Debug mode enabled
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
                        
            cd IDesign
            # FILE_PATH="./dockercompose/docker-compose.blue.yml"
            # EXIST_BLUE=$(docker-compose -p idesign_blue -f $FILE_PATH ps | grep Up)
            EXIST_BLUE=$(docker ps --filter "name=idesign_blue" --filter "status=running" -q)
            EXIST_GREEN=$(docker ps --filter "name=idesign_green" --filter "status=running" -q)
            echo "EXIST_BLUE zz: $EXIST_BLUE"

            if [ -z "$EXIST_BLUE" ] && [ -z "$EXIST_GREEN" ]; then
              docker-compose -f docker-compose.yml up -d

            elif [ -n "$EXIST_BLUE" ]; then
              sudo docker-compose -f docker-compose.yml pull
              sudo docker-compose -f ./dockercompose/docker-compose.green.yml up -d
              sudo cp ./nginx/nginx.green.conf /etc/nginx/nginx.conf
              sudo nginx -s reload
              # sudo docker cp ./nginx/nginx.green.conf nginx:/etc/nginx/nginx.conf
              # sudo docker exec nginx nginx -s reload


            fi

            nginx -s reload || exit 1


            # # Debug output
            # echo "Checking for running containers..."
            # BLUE_CONTAINER=$(sudo docker ps --filter "name=blue" -q)
            # GREEN_CONTAINER=$(sudo docker ps --filter "name=green" -q)

            # # 'blue'와 'green' 컨테이너가 실행 중인지 확인합니다.
            # if [ -z "$BLUE_CONTAINER" ] && [ -z "$GREEN_CONTAINER" ]; then
            #   echo "현재 실행 중인 컨테이너들 중 'blue'와 'green'이 없습니다."
            #   sudo docker-compose -f docker-compose.yml pull
            #   sudo docker-compose -f docker-compose.yml up -d
            #   exit 1
            # else
            #   echo "BLUE_CONTAINER: $BLUE_CONTAINER"
            #   echo "GREEN_CONTAINER: $GREEN_CONTAINER"

            #   if [ -n "$BLUE_CONTAINER" ]; then
            #     echo "Current container is blue. Switching to Green..."
                
            #     sudo docker-compose -f docker-compose.green.yml pull
            #     sudo docker-compose -f docker-compose.green.yml up -d
                
            #     sudo cp ./nginx/nginx.green.conf ./nginx/nginx.conf
                
            #     sudo docker-compose -f docker-compose.blue.yml down
                
            #   elif [ -n "$GREEN_CONTAINER" ]; then
            #     echo "Current container is green. Switching to Blue..."
                
            #     sudo docker-compose -f docker-compose.blue.yml pull
            #     sudo docker-compose -f docker-compose.blue.yml up -d
                
            #     sudo cp ./nginx/nginx.blue.conf ./nginx/nginx.conf
                
            #     sudo docker-compose -f docker-compose.green.yml down
                
            #   else
            #     echo "Start Init Process"
            #     RUNNING_CONTAINERS=$(sudo docker ps -q)
            #     if [ -n "$RUNNING_CONTAINERS" ]; then
            #       echo "Stopping and removing running containers..."
            #       sudo docker stop $RUNNING_CONTAINERS
            #       sudo docker rm $RUNNING_CONTAINERS
            #     fi
            #     sudo docker-compose -f docker-compose.yml pull
            #     sudo docker-compose -f docker-compose.yml up -d
            #   fi
            # fi
